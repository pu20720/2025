# -*- coding: utf-8 -*-
"""賽道告牌辨識

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rnuP_NSj6RhFJzeVWuSC0r3-rNLlHfKW
"""

!pip install ultralytics

from ultralytics import YOLO

import os
import shutil
import random

# 2. 掛載 Google Drive
from google.colab import drive
drive.mount('/content/drive')

# 3. 設定資料集根目錄，改成你自己的路徑
DATASET_PATH = "/content/drive/MyDrive/TTSRB-YOLO"

images_train_dir = os.path.join(DATASET_PATH, "images/train")
labels_train_dir = os.path.join(DATASET_PATH, "labels/train")

# 4. 建立驗證集資料夾
images_val_dir = os.path.join(DATASET_PATH, "images/val")
labels_val_dir = os.path.join(DATASET_PATH, "labels/val")

os.makedirs(images_val_dir, exist_ok=True)
os.makedirs(labels_val_dir, exist_ok=True)

# 5. 將 train 資料拆成 train(80%) 和 val(20%)
all_images = [f for f in os.listdir(images_train_dir) if f.endswith(('.jpg','.png','.jpeg'))]
random.seed(42)
random.shuffle(all_images)

split_index = int(len(all_images)*0.8)
train_files = all_images[:split_index]
val_files = all_images[split_index:]

print(f"總圖片數: {len(all_images)}")
print(f"訓練集數量: {len(train_files)}")
print(f"驗證集數量: {len(val_files)}")

# 將驗證集圖片及標註移到 val 資料夾
for fname in val_files:
    # 圖片檔
    src_img = os.path.join(images_train_dir, fname)
    dst_img = os.path.join(images_val_dir, fname)
    if not os.path.exists(dst_img):
        shutil.move(src_img, dst_img)

    # 標註檔 .txt
    label_fname = os.path.splitext(fname)[0] + ".txt"
    src_label = os.path.join(labels_train_dir, label_fname)
    dst_label = os.path.join(labels_val_dir, label_fname)
    if os.path.exists(src_label) and not os.path.exists(dst_label):
        shutil.move(src_label, dst_label)

print("驗證集資料已移動完成。")

# 6. 產生 data.yaml
class_names = [
    "遵行方向", "請開頭燈", "禁止進入", "禁止迴轉", "禁止左轉", "禁止臨停", "禁止右轉",
    "禁止左右轉", "測速照相", "禁止停車", "分道線", "80", "90", "100", "110"
]

yaml_path = "/content/ttsrb.yaml"
with open(yaml_path, "w", encoding="utf-8") as f:
    f.write(f"path: {DATASET_PATH}\n")
    f.write("train: images/train\n")
    f.write("val: images/val\n")
    f.write(f"nc: {len(class_names)}\n")
    f.write("names: [")
    f.write(", ".join([f"'{n}'" for n in class_names]))
    f.write("]\n")

print(f"data.yaml 已生成：{yaml_path}")

# 7. 載入 YOLOv8 模型
model = YOLO("yolov8n.pt")  # 可以換成 yolov8s.pt 或其他

# 8. 開始訓練
model.train(
    data=yaml_path,
    epochs=100,
    imgsz=640,
    batch=16,
    name="ttsrb_yolov8",
    device=0
)

# 9. 訓練結束後，列出結果檔案
!ls runs/train/ttsrb_yolov8

# 10. 推論示範（取一張驗證集圖片）
val_sample_img = os.path.join(images_val_dir, val_files[0])
print("測試圖片路徑:", val_sample_img)

results = model.predict(source=val_sample_img, conf=0.3, save=True)
print("推論結果已存至 runs/detect/predict/")